df = read.csv('credit_data.csv')
df = read.csv('credit_data.csv')
df = read.csv('credit_data.csv')
head(base, 2)
# apagando o clientid por ser uma coluna repetida
base$clientid = NULL
#resumo estatístico
summary(base)
credit_data <- read.csv("C:/Users/cyrog/OneDrive/Área de Trabalho/Review/R/jones/credit_data.csv")
View(credit_data)
df = read.csv('credit_data.csv')
head(base, 2)
head(df, 2)
# apagando o clientid por ser uma coluna repetida
base$clientid = NULL
df = read.csv('credit_data.csv')
head(df, 2)
# apagando o clientid por ser uma coluna repetida
df$clientid = NULL
#resumo estatístico
summary(df)
# Verificando idade
# Buscando os menores de 0 e não nulos
df[df$age < 0 & is.na(df$age) , ]
View(credit_data)
View(credit_data)
df = read.csv('credit_data.csv')
source("C:/Users/cyrog/OneDrive/Área de Trabalho/Review/R/jones/pre_processing.R")
source("C:/Users/cyrog/OneDrive/Área de Trabalho/Review/R/jones/pre_processing.R")
setwd("C:/Users/cyrog/OneDrive/Área de Trabalho/Review/R/jones")
df = read.csv('credit_data.csv')
head(df, 2)
# apagando o clientid por ser uma coluna repetida
df$clientid = NULL
#resumo estatístico
summary(df)
# Verificando idade
# Buscando os menores de 0 e não nulos
df[df$age < 0 & is.na(df$age) , ]
# Buscando os menores de 0 e nulos
df[df$age < 0 & is.na(df$age) , ]
mean(df$age)
# Verificando idade | Buscando os menores de 0 e não nulos
df[df$age < 0 & !is.na(df$age) , ]
mean(df$age)
mean(df$age, na.rm = T)
median(df$age, na.rm = T)
# Verificando idade | Buscando os menores de 0 e não nulos
df[df$age < 0 & is.na(df$age) , ] = median(df$age, na.rm = T)
# corrigindo os valores negativos
df$age = ifelse(df$age < 0, median(df$age, na.rm = T), df$age)
# Corrigindo os n/a
df$age = ifelse(is.na(df$age), median(df$age, na.rm = T), df$age)
df$age<0
count.fields(df$age<0)
count(df$age<0)
summary(df$age)
# Verificando idade | Buscando os menores de 0 e não nulos
df[df$age < 0 & !is.na(df$age) , ]
head(df, 2)
# Escalonamento de atributos
# Escalonamento de atributos
df[, 1:3] = scale(df[, 1:3])
# Escalonamento de atributos
df[, 1:3] = scale(df[, 1:3])
head(df)
head(df, 5)
base_credit = read.csv('credit_data.csv')
# Observando os dados
head(base_credit, 2)
# apagando o clientid por ser uma coluna repetida
base_credit$clientid = NULL
#resumo estatístico
summary(df)
# Verificando idade | Buscando os menores de 0 e não nulos
base_credit[base_credit$age < 0 & !is.na(base_credit$age) , ]
# Mediana
median(base_credit$age, na.rm = T)
# corrigindo os valores negativos
base_credit$age = ifelse(base_credit$age < 0, median(base_credit$age, na.rm = T), base_credit$age)
# Corrigindo os n/a
base_credit$age = ifelse(is.na(base_credit$age), median(base_credit$age, na.rm = T), base_credit$age)
#vendo se ta tudo ok
summary(base_credit$age)
# Escalonamento de atributos
base_credit[, 1:3] = scale(base_credit[, 1:3])
# Escalonamento Feito
head(base_credit, 5)
base_census = read.csv("census.csv")
head(census, 5)
census = read.csv("census.csv")
head(census, 5)
# Removendo coluna inútil
census$X = NULL
table(census)
table(census$sex)
# Tranformando strings em variaveis discretas
census$sex = factor(census$sex, levels = c(' Female', ' Male'), levels = c(0,1))
census$workclass = factor(census$workclass, levels = c(' Federal-gov', ' Local-gov', ' Private', ' Self-emp-inc', ' Self-emp-not-inc', ' State-gov', ' Without-pay'), labels = c(1, 2, 3, 4, 5, 6, 7))
census$education = factor(census$ducation, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
census$education = factor(census$ducation, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
census$marital.status = factor(census$marital.status, levels = c(' Divorced', ' Married-AF-spouse', ' Married-civ-spouse', ' Married-spouse-absent', ' Never-married', ' Separated', ' Widowed'), labels = c(1, 2, 3, 4, 5, 6, 7))
census$occupation = factor(census$occupation, levels = c(' Adm-clerical', ' Armed-Forces', ' Craft-repair', ' Exec-managerial', ' Farming-fishing', ' Handlers-cleaners', ' Machine-op-inspct', ' Other-service', ' Priv-house-serv', ' Prof-specialty', ' Protective-serv', ' Sales', ' Tech-support', ' Transport-moving'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
census$relationship = factor(census$relationship, levels = c(' Husband', ' Not-in-family', ' Other-relative', ' Own-child', ' Unmarried', ' Wife'), labels = c(1, 2, 3, 4, 5, 6))
census$race = factor(census$race, levels = c(' Amer-Indian-Eskimo', ' Asian-Pac-Islander', ' Black', ' Other', ' White'), labels = c(1, 2, 3, 4, 5))
census$native.country = factor(census$ative.country, levels = c(' Cambodia', ' Canada', ' China', ' Columbia', ' Cuba', ' Dominican-Republic', ' Ecuador', ' El-Salvador', ' England', ' France', ' Germany', ' Greece', ' Guatemala', ' Haiti', ' Holand-Netherlands', ' Honduras', ' Hong', ' Hungary', ' India', ' Iran', ' Ireland', ' Italy', ' Jamaica', ' Japan', ' Laos', ' Mexico', ' Nicaragua', ' Outlying-US(Guam-USVI-etc)', ' Peru', ' Philippines', ' Poland', ' Portugal', ' Puerto-Rico', ' Scotland', ' South', ' Taiwan', ' Thailand', ' Trinadad&Tobago', ' United-States', ' Vietnam', ' Yugoslavia'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41))
census$education = factor(census$education, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
census$native.country = factor(census$native.country, levels = c(' Cambodia', ' Canada', ' China', ' Columbia', ' Cuba', ' Dominican-Republic', ' Ecuador', ' El-Salvador', ' England', ' France', ' Germany', ' Greece', ' Guatemala', ' Haiti', ' Holand-Netherlands', ' Honduras', ' Hong', ' Hungary', ' India', ' Iran', ' Ireland', ' Italy', ' Jamaica', ' Japan', ' Laos', ' Mexico', ' Nicaragua', ' Outlying-US(Guam-USVI-etc)', ' Peru', ' Philippines', ' Poland', ' Portugal', ' Puerto-Rico', ' Scotland', ' South', ' Taiwan', ' Thailand', ' Trinadad&Tobago', ' United-States', ' Vietnam', ' Yugoslavia'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41))
View(df)
base_credit = read.csv('./data/credit_data.csv')
# Observando os dados
head(base_credit, 2)
# apagando o clientid por ser uma coluna repetida
base_credit$clientid = NULL
#resumo estatístico
summary(df)
# Verificando idade | Buscando os menores de 0 e não nulos
base_credit[base_credit$age < 0 & !is.na(base_credit$age) , ]
# Mediana
median(base_credit$age, na.rm = T)
# Se a idade for menor que zero, é substituida. Senão recebe o valor anterior
base_credit$age = ifelse(base_credit$age < 0, median(base_credit$age, na.rm = T), base_credit$age)
# Corrigindo os n/a
base_credit$age = ifelse(is.na(base_credit$age), median(base_credit$age, na.rm = T), base_credit$age)
#vendo se ta tudo ok
summary(base_credit$age)
# Escalonamento de atributos
base_credit[, 1:3] = scale(base_credit[, 1:3])
# Escalonamento Feito
head(base_credit, 5)
# Selecionando csv
census = read.csv("./data/census.csv")
# Verificando os dados
head(census, 5)
# Removendo coluna inútil
census$X = NULL
# Contando os valores
table(census$sex)
# Tranformando strings em variaveis discretas
census$sex = factor(census$sex, levels = c(' Female', ' Male'), levels = c(0,1))
census$workclass = factor(census$workclass, levels = c(' Federal-gov', ' Local-gov', ' Private', ' Self-emp-inc', ' Self-emp-not-inc', ' State-gov', ' Without-pay'), labels = c(1, 2, 3, 4, 5, 6, 7))
census$education = factor(census$education, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
census$marital.status = factor(census$marital.status, levels = c(' Divorced', ' Married-AF-spouse', ' Married-civ-spouse', ' Married-spouse-absent', ' Never-married', ' Separated', ' Widowed'), labels = c(1, 2, 3, 4, 5, 6, 7))
census$occupation = factor(census$occupation, levels = c(' Adm-clerical', ' Armed-Forces', ' Craft-repair', ' Exec-managerial', ' Farming-fishing', ' Handlers-cleaners', ' Machine-op-inspct', ' Other-service', ' Priv-house-serv', ' Prof-specialty', ' Protective-serv', ' Sales', ' Tech-support', ' Transport-moving'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
census$relationship = factor(census$relationship, levels = c(' Husband', ' Not-in-family', ' Other-relative', ' Own-child', ' Unmarried', ' Wife'), labels = c(1, 2, 3, 4, 5, 6))
census$race = factor(census$race, levels = c(' Amer-Indian-Eskimo', ' Asian-Pac-Islander', ' Black', ' Other', ' White'), labels = c(1, 2, 3, 4, 5))
census$native.country = factor(census$native.country, levels = c(' Cambodia', ' Canada', ' China', ' Columbia', ' Cuba', ' Dominican-Republic', ' Ecuador', ' El-Salvador', ' England', ' France', ' Germany', ' Greece', ' Guatemala', ' Haiti', ' Holand-Netherlands', ' Honduras', ' Hong', ' Hungary', ' India', ' Iran', ' Ireland', ' Italy', ' Jamaica', ' Japan', ' Laos', ' Mexico', ' Nicaragua', ' Outlying-US(Guam-USVI-etc)', ' Peru', ' Philippines', ' Poland', ' Portugal', ' Puerto-Rico', ' Scotland', ' South', ' Taiwan', ' Thailand', ' Trinadad&Tobago', ' United-States', ' Vietnam', ' Yugoslavia'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41))
census$income = factor(census$income, levels = c(' <=50K', ' >50K'), labels = c(0, 1))
# Escalonamento
save.image("C:/Users/cyrog/OneDrive/Área de Trabalho/Review/R/jones/cc_workspace.RData")
